    {{#isQueryParam}}
    api.{{paramName}} = c.Query("{{baseName}}")
    {{/isQueryParam}}
    {{^isQueryParam}}
    {{#isFormParam}}
    api.{{paramName}} = c.PostForm("{{baseName}}")
    {{/isFormParam}}
    {{^isFormParam}}
    api.{{paramName}} = c.Param("{{baseName}}")
    {{/isFormParam}}
    {{/isQueryParam}}
    {{#defaultValue}}
    if api.{{paramName}} == "" {
        // use provided default value
        api.{{paramName}} = "{{defaultValue}}"
    }
    {{/defaultValue}}
    {{#required}}
    // {{paramName}} is require
    if api.{{paramName}} == "" {
		c.JSON(http.StatusBadRequest, gin.H{
			"code": 400,
			"message": "{{paramName}} is required",
		})
        return
    }
    {{#minLength}}
    if len(api.{{paramName}}) < {{minLength}} {
		c.JSON(http.StatusBadRequest, gin.H{
			"code": 400,
			"message": "{{paramName}} should have minimum length of {{minLength}}",
		})
        return
    }
    {{/minLength}}
    {{#maxLength}}
    if len(api.{{paramName}}) > {{maxLength}} {
		c.JSON(http.StatusBadRequest, gin.H{
			"code": 400,
			"message": "{{paramName}} should have maximum length of {{maxLength}}",
		})
        return
    }
    {{/maxLength}}
    {{/required}}
    {{^required}}
    {{#minLength}}
    // {{paramName}} is not required, minLength {{minLength}}
    if api.{{paramName}} != "" && len(api.{{paramName}}) < {{minLength}} {
		c.JSON(http.StatusBadRequest, gin.H{
			"code": 400,
			"message": "{{paramName}} should have minimum length of {{minLength}}",
		})
        return
    }
    {{/minLength}}
    {{#maxLength}}
    // {{paramName}} is not required, maxLength {{maxLength}}
    if api.{{paramName}} != "" && len(api.{{paramName}}) > {{maxLength}} {
		c.JSON(http.StatusBadRequest, gin.H{
			"code": 400,
			"message": "{{paramName}} should have maximum length of {{maxLength}}",
		})
        return
    }
    {{/maxLength}}
    {{/required}}

